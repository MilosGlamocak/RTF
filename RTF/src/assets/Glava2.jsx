/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 glava2.glb 
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import gsap from 'gsap'

export function Model(props) {

  let model = useRef(null)
  let body = document.body;
  let rect = body.getBoundingClientRect();

  let [coordinates, setCoordinates] = useState({
    x: 0,
    y: 0
})

function mouseTracker() {
    let mouseListener = body.addEventListener('mousemove', e => {
        let percentY = Math.round((e.clientY / rect.height) * 100)
        let percentX = Math.round((e.clientX / rect.width) * 100)
        setCoordinates({
            x: percentX,
            y: percentY
        })
    });
    return () => {
      body.removeEventListener('mousemove', mouseListener)
    }
}
useEffect(() => {
  mouseTracker()
  gsap.to(model.current.rotation, {
      y: coordinates.x / 100 - 0.5,
      x: coordinates.y / 150 - 0.05,
      duration: 0.7,
      ease: "power1.out",
  })
}, [coordinates])


  const { nodes, materials } = useGLTF('/glava2.glb')
  return (
    <group {...props} dispose={null} >
      <mesh geometry={nodes.FBHead.geometry} material={materials['Material.001']} ref={model}/>
    </group>
  )
}

useGLTF.preload('/glava2.glb')
